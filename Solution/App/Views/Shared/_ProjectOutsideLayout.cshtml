<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/es6")
    @Scripts.Render("~/bundles/vue")
    @Scripts.Render("~/bundles/element")
    @Scripts.Render("~/bundles/echarts")
    @Scripts.Render("~/bundles/utils")
</head>
<body>
    @RenderBody()
    <div id="main"></div>
    <script type="text/x-template" id="mainpage">
        <el-container>
            <el-header>
                <div class="logo"></div>
                <div class="menu">
                    <el-menu v-bind:default-active="activeIndex" class="top-menu" mode="horizontal" v-on:select="handleSelect" background-color="transparent" text-color="#fff" active-text-color="#fff">
                        <el-menu-item v-bind:index="menu.id" v-bind:key="menu.id" v-for="(menu,index) in menus"><span>{{menu.name}}</span></el-menu-item>
                    </el-menu>
                    <el-dropdown v-on:command="handleCommand">
                        <span class="el-dropdown-link">
                            @ViewBag.UserName<i class="el-icon-arrow-down el-icon--right"></i>
                        </span>
                        <el-dropdown-menu slot="dropdown">
                            <el-dropdown-item command="logout">退 出</el-dropdown-item>
                        </el-dropdown-menu>
                    </el-dropdown>
                </div> 
            </el-header>
            <el-container>
                <el-aside ref="aside" width="auto" v-show="isShow">
                    <el-menu v-bind:style="{height:height}" v-bind:default-active="activeTreeIndex" background-color="#003e93" text-color="#fff" active-text-color="#409eff">
                        <el-submenu v-bind:index="item.id" v-if="!item.children" v-for="(item,index) in menuTree" v-bind:key="item.id">
                            <template slot="title">
                                <i class="icon-title" v-bind:style="{backgroundImage:'url(../../Images/gc_main/'+item.icon+')'}"></i>{{item.name}}
                            </template>
                            <el-menu-item v-bind:index="child.id" v-bind:key="child.id" v-for="(child,index) in item.children" v-on:click="changeMenu(child)"><i class="icon-title" v-bind:style="{backgroundImage:'url(../../Images/gc_main/'+child.icon+')'}"></i>{{child.name}}</el-menu-item>
                        </el-submenu>
                        <el-submenu v-bind:index="item.id" v-else-if="item.children&&!item.children[0].children" v-for="(item,index)  in menuTree" v-bind:key="item.id">
                            <template slot="title">
                                <i class="icon-title" v-bind:style="{backgroundImage:'url(../../Images/gc_main/'+item.icon+')'}"></i>{{item.name}}
                            </template>
                            <el-menu-item v-bind:index="child.id" v-bind:key="child.id" v-for="(child,index) in item.children" v-on:click="changeMenu(child)"><i class="icon-title" v-bind:style="{backgroundImage:'url(../../Images/gc_main/'+child.icon+')'}"></i>{{child.name}}</el-menu-item>
                        </el-submenu>
                        <el-submenu v-else-if="item.children&&item.children[0].children" v-bind:index="item.id" v-for="(item,index)  in menuTree[0].children" v-bind:key="item.id">
                            <template slot="title">
                                <i class="icon-title" v-bind:style="{backgroundImage:'url(../../Images/gc_main/'+item.icon+')'}"></i>{{item.name}}
                            </template>
                            <el-menu-item v-bind:index="child.id" v-bind:key="child.id" v-for="(child,index) in item.children" v-on:click="changeMenu(child)"><i class="icon-title" v-bind:style="{backgroundImage:'url(../../Images/gc_main/'+child.icon+')'}"></i>{{child.name}}</el-menu-item>
                        </el-submenu>
                    </el-menu>
                </el-aside>

                <el-main v-bind:style="{height:mainHeight}">
                    <iframe v-if="!isShow" v-bind:src="url" width="100%" v-bind:height="height" frameborder="0" scrolling="auto" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" allowfullscreen="true"></iframe>
                    <el-tabs v-else v-model="tabsValue" type="card" closable v-on:tab-remove="removeTab">
                        <el-tab-pane v-for="(item, index) in tabs"
                                     v-bind:key="item.name"
                                     v-bind:label="item.title"
                                     v-bind:name="item.name">
                            <main-iframe v-once v-bind:src="item.url"></main-iframe>
                        </el-tab-pane>
                    </el-tabs>

                </el-main>
            </el-container>
            <el-footer style="height:30px;">
                <span>版权所有：奉贤水务局</span>
                <span>技术支持：超图软件</span>
            </el-footer>
        </el-container>
    </script>

    <script type="text/x-template" id="main-iframe">
        <iframe v-bind:src="src" width="100%" v-bind:height="h" frameborder="0" scrolling="auto" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" allowfullscreen="true"></iframe>
    </script>

    <script>
        var mainIframe = {
            template: '#main-iframe',
            data: function () {
                return {
                    h: (document.documentElement.clientHeight - 168) + 'px'
                }
            },
            props: {
                src: ""
            },
            methods: {
                resize: function () {
                    $(window).resize(function () {
                        this.setSize()
                    }.bind(this));
                },
                setSize: function () {
                    var docH = document.documentElement.clientHeight
                    this.h = (docH - 168) + 'px'
                }
            },
            mounted: function () {
                this.resize()
            }
        }

        new Vue({
            el: '#main',
            template: '#mainpage',
            components: {
                "main-iframe": mainIframe
            },
            data: {
                isShow: true,
                activeIndex: '1',
                activeTreeIndex: '1',
                menuTree: [],
                menus: [],
                height: (document.documentElement.clientHeight - 112) + 'px',
                mainHeight: (document.documentElement.clientHeight - 108) + 'px',
                tabsValue: '0',
                tabs: [],
                tabIndex: 0,
                url: ""
            },
            mounted: function () {
                this.resize()
                this.getMenus()
            },
            methods: {
                addTab: function (targetName, id, title, url) {
                    var exist = false
                    var tv = ""
                    for (var i = 0; i < this.tabs.length; i++) {
                        if (id == this.tabs[i].id) {
                            exist = true
                            tv = this.tabs[i].name
                            break
                        }
                    }
                    if (exist == true) {
                        this.tabsValue = tv
                        return
                    }
                    let newTabName = ++this.tabIndex + '';
                    this.tabs.push({
                        id: id,
                        title: title,
                        name: newTabName,
                        url: url
                    });
                    this.tabsValue = newTabName;
                },
                removeTab: function (targetName) {
                    let tabs = this.tabs;
                    if (tabs.length == 1) return
                    let activeName = this.tabsValue;
                    if (activeName === targetName) {
                        tabs.forEach(function (tab, index) {
                            if (tab.name === targetName) {
                                let nextTab = tabs[index + 1] || tabs[index - 1];
                                if (nextTab) {
                                    activeName = nextTab.name;
                                }
                            }
                        });
                    }
                    this.tabsValue = activeName;
                    this.tabs = tabs.filter(function (tab) { return tab.name !== targetName });
                },
                resetTab: function () {
                    this.tabs = []
                },
                resize: function () {
                    $(window).resize(function () {
                        this.setSize()
                    }.bind(this));
                },
                setSize: function () {
                    var docH = document.documentElement.clientHeight
                    this.height = (docH - 112) + 'px'
                    this.mainHeight = (docH - 108) + 'px'
                },
                changeMenu: function (menu) {
                    if (this.isShow) {
                        this.addTab(this.tabsValue, menu.id, menu.name, menu.url)
                        this.url = menu.url
                    } else {
                        this.url = menu.url
                    }

                },
                getMenus: function () {
                    axios.post('/Main/GetOutsideMenus', null)
                         .then(function (response) {
                             if (JSON.parse(response.data).FXSWMenuGetResponse != undefined) {
                                 this.menus = JSON.parse(response.data).FXSWMenuGetResponse.menus
                                 this.handleSelect(this.menus[0].id, null)
                             }
                         }.bind(this))
                         .catch(function (error) { })
                },
                handleSelect: function (key, keyPath) {
                    var tempMenu = []
                    for (var i = 0; i < this.menus.length; i++) {
                        if (this.menus[i].id == key) {
                            tempMenu.push(this.menus[i])
                            this.setMenu(tempMenu)
                            return
                        }
                    }
                },
                setMenu: function (menus) {
                    if (this.menuTree.length > 0 && this.menuTree[0].id === menus[0].id) {
                        return
                    }
                    this.resetTab()
                    this.menuTree = menus
                    if (this.menuTree[0].url == "" || this.menuTree[0].url == undefined) {
                        this.isShow = true
                    } else {
                        this.isShow = false
                    }
                    this.activeIndex = this.menus[0].id
                    this.activeTreeIndex = this.menuTree[0].children === undefined ? this.menuTree[0].id :
                        this.menuTree[0].children[0].children === undefined ? this.menuTree[0].children[0].id : this.menuTree[0].children[0].children[0].id
                    var menu = this.menuTree[0].children === undefined ? this.menuTree[0] :
                        this.menuTree[0].children[0].children === undefined ? this.menuTree[0].children[0] : this.menuTree[0].children[0].children[0]
                    this.changeMenu(menu)
                },
                handleCommand: function (command) {
                    if (command == 'logout') {
                        axios.post('/Login/Logout', null)
                         .then(function (response) {
                             if (response.data.result == 'sucess') {
                                 window.location = "/Login/ProjectOutside"
                                 this.loading = false
                             }
                         }.bind(this))
                         .catch(function (error) {})
                    }
                }
            }
        });
    </script>

    <style>
        .el-container {
            border: 0px solid #eee;
        }

        .el-header {
            background-color: #004fbc;
            background-image: url('../../Images/gc_main/img_header_right_gczxt.png');
            background-position: right;
            background-repeat: no-repeat;
            color: #333;
            height: 78px !important;
            line-height: 78px;
            text-align: right;
            font-size: 12px;
            padding: 0px;
        }

            .el-header .logo {
                height: 78px;
                width: 100%;
                max-width: 1056px;
                display: inline-block;
                float: left;
                background-image: url('../../Images/gc_main/img_header_xm.png');
                background-repeat: no-repeat;
            }
            .el-header .menu {
                height: 78px;
                position: absolute;
                right: 0px;
            }

            .el-header .el-menu {
                display: inline-block;
                height: 78px;
            }

                .el-header .el-menu .el-menu-item {
                    margin-top: 8px;
                }

                    .el-header .el-menu .el-menu-item:hover, .el-header .el-menu .el-menu-item:focus, .el-header .el-menu .el-menu-item:active {
                        background-color: transparent !important;
                    }

                    .el-header .el-menu .el-menu-item span {
                        font-size: 16px;
                    }

            .el-header .el-dropdown {
                display: inline;
                font-size: 16px;
                color: white;
                margin: 0 30px 0 20px;
                cursor: pointer;
                float: right;
            }


        .el-aside {
            min-width: 200px;
            border-right: solid 1px #003e93;
            overflow-x: auto;
            background: #003e93;
        }

            .el-aside::-webkit-scrollbar-track {
                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
                background-color: rgb(0, 62, 147);
                border-radius: 10px;
            }

            .el-aside::-webkit-scrollbar {
                width: 3px;
                background-color: rgb(0, 62, 147);
            }

            .el-aside::-webkit-scrollbar-thumb {
                border-radius: 10px;
                background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0.44, rgb(122,153,217)), color-stop(0.72, rgb(73,125,189)), color-stop(0.86, rgb(28,58,148)));
            }

            .el-aside .el-menu {
                border: 0px;
            }

                .el-aside .el-menu .el-submenu div {
                    padding-right: 10px !important;
                    background-color: #003276 !important;
                }

                .el-aside .el-menu .el-menu-item {
                    padding-left: 25px !important;
                }

                .el-aside .el-menu .icon-title {
                    width: 14px;
                    height: 14px;
                    display: inline-block;
                    padding-right: 10px;
                    background-repeat: no-repeat;
                }

        .el-main {
            padding: 0px;
            overflow-y: hidden;
        }

        .el-footer {
            background-color: #0056CE;
            font-size: 12px;
            color: #eee;
            height: 30px;
            text-align: center;
            line-height: 30px;
            padding: 0px;
        }

        .el-footer span {
             margin-left: 20px;
         } 

         @@media screen and (max-width: 1200px) {
           .el-header .el-menu {
                display: inline-block;
                height: 78px;
            }
            .el-header .el-menu .el-menu-item{
                padding:0 10px;
            }
             .el-header .el-dropdown {
                margin: 0 10px 0 10px;
            }
        }
    </style>
</body>
</html>
